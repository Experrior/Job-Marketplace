apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: master-statefulset
  labels:
    replicationRole: master
    index: '1'
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      index: '1'

  volumeClaimTemplates:
    - metadata:
        name: postgres-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: standard
        resources:
          requests:
            storage: 1Gi

  template:
    metadata:
      labels:
        index: '1'
        replicationRole: primary

    spec:
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config-volume
          configMap:
            name: postgres-master
            defaultMode: 0777

      containers:

        - name: database-master
          image: job_market_database:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5432
          args: ["-c", "config_file=/etc/postgresql.conf", "-c", "hba_file=/etc/pg_hba.conf"]

          livenessProbe:
              exec:
                command:
                  - sh
                  - -c
                  - exec pg_isready -U postgres -h $POD_IP
              failureThreshold: 10
              initialDelaySeconds: 60
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 15

          env:
            - name: POSTGRES_DB
              value: JobMarketDB
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: test
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"  

          volumeMounts:
            - name: config-volume
              mountPath: /etc/pg_hba.conf
              subPath: pg_hba.conf

            - name: config-volume
              mountPath: /etc/postgresql.conf
              subPath: postgresql-master.conf

            - name: config-volume
              mountPath: /docker-entrypoint-initdb.d/db_init.sql
              subPath: db_init.sql